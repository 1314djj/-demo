{"remainingRequest":"C:\\Users\\ThinkPad\\Desktop\\demo-cart\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ThinkPad\\Desktop\\demo-cart\\src\\App.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\ThinkPad\\Desktop\\demo-cart\\src\\App.vue","mtime":1679033752616},{"path":"C:\\Users\\ThinkPad\\Desktop\\demo-cart\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1677913861802},{"path":"C:\\Users\\ThinkPad\\Desktop\\demo-cart\\node_modules\\babel-loader\\lib\\index.js","mtime":1677913862482},{"path":"C:\\Users\\ThinkPad\\Desktop\\demo-cart\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1677913861802},{"path":"C:\\Users\\ThinkPad\\Desktop\\demo-cart\\node_modules\\vue-loader\\lib\\index.js","mtime":1677913844882}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8vIOWvvOWFpWF4aW9z6K+35rGC5bqTCmltcG9ydCBheGlvcyBmcm9tICdheGlvcycKLy/lr7zlhaXpnIDopoHnmoTnu4Tku7YKaW1wb3J0IEhlYWRlciBmcm9tICdAL2NvbXBvbmVudHMvSGVhZGVyL0hlYWRlci52dWUnCgppbXBvcnQgR29vZHMgZnJvbSAnQC9jb21wb25lbnRzL0dvb2RzL0dvb2RzLnZ1ZScKCmltcG9ydCBGb290ZXIgZnJvbSAnQC9jb21wb25lbnRzL0Zvb3Rlci9Gb290ZXIudnVlJwoKaW1wb3J0IGJ1cyBmcm9tICdAL2NvbXBvbmVudHMvZXZlbnRCdXMuanMnCiAgCmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgLy/nlKjmnaXlrZjlgqjotK3nianovabnmoTliJfooajmlbDmja7vvIzpu5jorqTkuLrnqbrmlbDnu4QKICAgICAgbGlzdDogW10KICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICAvL+WKqOaAgeiuoeeul+WHuuWFqOmAieeahOeKtuaAgeaYryB0cnVlIOi/mOaYryBmYWxzZQogICAgZnVsbFN0YXRlKCl7CiAgICAgIHJldHVybiB0aGlzLmxpc3QuZXZlcnkoaXRlbSA9PiBpdGVtLmdvb2RzX3N0YXRlKQogICAgfSwKICAgIC8vIOW3suWLvumAieWVhuWTgeeahOS7t+agvAogICAgYW10KCkgewogICAgICAvLyAxLiDlhYggZmlsdGVyIOi/h+a7pAogICAgICAvLyAyLiDlho0gcmVkdWNlIOe0r+WKoAogICAgIHJldHVybiB0aGlzLmxpc3QKICAgICAgICAuZmlsdGVyKGl0ZW0gPT4gaXRlbS5nb29kc19zdGF0ZSkKICAgICAgICAucmVkdWNlKCh0b3RhbCwgaXRlbSkgPT4gKHRvdGFsICs9IGl0ZW0uZ29vZHNfcHJpY2UgKiBpdGVtLmdvb2RzX2NvdW50KQogICAgICAgICwwKQogICAgfSwKICAgIC8vIOW3suWLvumAieWVhuWTgeeahOaAu+aVsOmHjwogICAgdG90YWwoKSB7CiAgICAgcmV0dXJuIHRoaXMubGlzdC5maWx0ZXIoaXRlbSA9PiBpdGVtLmdvb2RzX3N0YXRlKS5yZWR1Y2UoKHQsaXRlbSk9PiAodCArPSBpdGVtLmdvb2RzX2NvdW50KSAsMCkKICAgIH0KICB9LAogIGNyZWF0ZWQoKSB7CiAgICAvL+iwg+eUqOivt+axguaVsOaNrueahOaWueazlQogICAgdGhpcy5pbml0Q2FyTGlzdCgpIAoKICAgIGJ1cy4kb24oJ3NoYXJlJyx2YWwgPT4gewogICAgICB0aGlzLmxpc3Quc29tZShpdGVtID0+IHsKICAgICAgICBpZihpdGVtLmlkID09PSB2YWwuaWQpIHsKICAgICAgICAgIGl0ZW0uZ29vZHNfY291bnQgPSB2YWwudmFsdWUKICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgfQogICAgICB9KQogICAgfSkKICB9LAoKICBtZXRob2RzOiB7CiAgICAvL+Wwgeijheivt+axguWIl+ihqOaVsOaNrueahOaWueazlQogICAgYXN5bmMgaW5pdENhckxpc3QoKSB7CiAgICAvL+iwg+eUqCBheGlvcyDnmoRnZXQg5pa55rOV77yM6K+35rGC5YiX6KGo5pWw5o2uCiAgICAgY29uc3R7IGRhdGE6IHJlcyB9ID0gYXdhaXQgYXhpb3MuZ2V0KCdodHRwczovL3d3dy5lc2Nvb2suY24vYXBpL2NhcnQnKSAKICAgICAvL+WPquimgeivt+axguWbnuadpeeahOaVsOaNru+8jOWcqOmhtemdoua4suafk+acn+mXtOimgeeUqOWIsO+8jOWImeW/hemhu+i9rOWtmOWIsGRhdGHkuK0KICAgICAgaWYocmVzLnN0YXR1cz09PTIwMCl7CiAgICAgICAgdGhpcy5saXN0PXJlcy5saXN0CiAgICAgIH0KICAgIH0sCiAgICAvL+aOpeaUtkdvb2Rz5a2Q57uE5Lu25Lyg6YCS6L+H5p2l55qE5pWw5o2uCiAgICAvL2XnmoTmoLzlvI/kuLp7aWTvvIx2YWx1ZX0KICAgIGdldE5ld1N0YXRlKGUpewogICAgICAgY29uc29sZS5sb2coIueItue7hOS7tuaOpeaUtuWIsOaVsOaNruS6hu+8ge+8gSIpCiAgICAgICB0aGlzLmxpc3Quc29tZShpdGVtID0+IHsKICAgICAgICAgaWYoaXRlbS5pZCA9PT0gZS5pZCl7CiAgICAgICAgICBpdGVtLmdvb2RzX3N0YXRlID0gZS52YWx1ZQogICAgICAgICAgLy/nu4jmraLlkI7nu63nmoTlvqrnjq8KICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgIH0KICAgICAgIH0pCiAgICB9LAogICAgLy/mjqXmlLYgRm9vdGVyIOWtkOe7hOS7tuS8oOmAkui/h+adpeeahOWFqOmAieaMiemSrueahOeKtuaAgQogICAgZ2V0RnVsbFN0YXRlKGUpewogICAgIGNvbnNvbGUubG9nKCflnKhBcHDkuK3mi7/liLDkuoblhajpgInnirbmgIEnKQogICAgIHRoaXMubGlzdC5mb3JFYWNoKGl0ZW0gPT4gaXRlbS5nb29kc19zdGF0ZSA9IGUpCiAgICB9CgogIH0sCiAgY29tcG9uZW50czogewogICAgSGVhZGVyLAogICAgR29vZHMsCiAgICBGb290ZXIKICB9Cn0K"},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAuBA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <!--Header 头部区域 -->\n    <Header title=\"购物车案例\"></Header>\n    <!-- 循环渲染每一个商品的信息-->\n    <Goods \n    v-for=\"item in list\" \n    :key=\"item.id\" \n    :id=\"item.id\"\n    :title=\"item.goods_name\"\n    :pic=\"item.goods_img\"\n    :price=\"item.goods_price\"\n    :state=\"item.goods_state\"\n    :count=\"item.goods_count\"\n    @state-change =\"getNewState\"\n    ></Goods>\n\n    <!-- Footer区域 -->\n    <Footer :isfull=\"fullState\" :amount=\"amt\" @full-change=\"getFullState\" :all=\"total\"></Footer>\n  </div>\n</template>\n\n<script>\n// 导入axios请求库\nimport axios from 'axios'\n//导入需要的组件\nimport Header from '@/components/Header/Header.vue'\n\nimport Goods from '@/components/Goods/Goods.vue'\n\nimport Footer from '@/components/Footer/Footer.vue'\n\nimport bus from '@/components/eventBus.js'\n  \nexport default {\n  data() {\n    return {\n      //用来存储购物车的列表数据，默认为空数组\n      list: []\n    }\n  },\n  computed: {\n    //动态计算出全选的状态是 true 还是 false\n    fullState(){\n      return this.list.every(item => item.goods_state)\n    },\n    // 已勾选商品的价格\n    amt() {\n      // 1. 先 filter 过滤\n      // 2. 再 reduce 累加\n     return this.list\n        .filter(item => item.goods_state)\n        .reduce((total, item) => (total += item.goods_price * item.goods_count)\n        ,0)\n    },\n    // 已勾选商品的总数量\n    total() {\n     return this.list.filter(item => item.goods_state).reduce((t,item)=> (t += item.goods_count) ,0)\n    }\n  },\n  created() {\n    //调用请求数据的方法\n    this.initCarList() \n\n    bus.$on('share',val => {\n      this.list.some(item => {\n        if(item.id === val.id) {\n          item.goods_count = val.value\n          return true\n        }\n      })\n    })\n  },\n\n  methods: {\n    //封装请求列表数据的方法\n    async initCarList() {\n    //调用 axios 的get 方法，请求列表数据\n     const{ data: res } = await axios.get('https://www.escook.cn/api/cart') \n     //只要请求回来的数据，在页面渲染期间要用到，则必须转存到data中\n      if(res.status===200){\n        this.list=res.list\n      }\n    },\n    //接收Goods子组件传递过来的数据\n    //e的格式为{id，value}\n    getNewState(e){\n       console.log(\"父组件接收到数据了！！\")\n       this.list.some(item => {\n         if(item.id === e.id){\n          item.goods_state = e.value\n          //终止后续的循环\n          return true\n         }\n       })\n    },\n    //接收 Footer 子组件传递过来的全选按钮的状态\n    getFullState(e){\n     console.log('在App中拿到了全选状态')\n     this.list.forEach(item => item.goods_state = e)\n    }\n\n  },\n  components: {\n    Header,\n    Goods,\n    Footer\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n.app-container {\n  padding-top: 45px;\n  padding-bottom: 50px;\n}\n</style>\n"]}]}